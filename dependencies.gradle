/**
 * All dependencies variable.
 */
def deps = [:]
ext.deps = deps

/**
 * Version variables.
 */
def versions = [:]
versions.android_gradle_plugin = "4.1.0"
versions.androidx_appcompat = "1.0.2"
versions.androidx_constraint = "1.1.3"
versions.androidx_material = "1.0.0"
versions.androidx_recyclerview = "1.0.0"
versions.androidx_core = "1.0.2"
versions.androidx_viewpager = "1.0.0"
versions.androidx_multidex = "2.0.0"
versions.androidx_card_view = "1.0.0"
versions.androidx_grid_layout = "1.0.0"
versions.androidx_annotation = "1.1.0"
versions.lifecycle = "2.0.0"
versions.kotlin = "1.3.61"
versions.ktlint = "0.32.0"
versions.fabric = "1.29.0"
versions.google_plugin = "4.3.3"
versions.circle_image_view = "3.0.0"
versions.material_dialogs = "2.6.0"
versions.toothpick = "2.1.0"
versions.toothpick_testing = "1.1.3"
versions.dropwizard_testing = "1.3.13"
versions.rx_java = "2.1.13"
versions.rx_android = "2.0.2"
versions.rx_kotlin = "2.4.0"
versions.rx_network = "3.0.3"
versions.rx_realm_exitensions = "2.5.0"
versions.rx_binding = "3.0.0-alpha2"
versions.retrofit = "2.6.0"
versions.okhttp_logging_interceptor = "4.0.0"
versions.rx_java_extensions = "0.20.10"
versions.crashlytics = "2.10.1@aar"
versions.joda_time = "2.10.2"
versions.mapstruct = "1.3.0.Final"
versions.junit = "5.5.2"
versions.mockito = "2.25.1"
versions.mockito_ktx = "2.1.0"
versions.dropwizard_testing = "1.3.13"
versions.matchers = "1.5.0"
versions.androidx_test_core = "1.1.1-alpha02"
versions.dexmaker_mockito = "1.2"
versions.androidx_runner = "1.1.2-alpha02"
versions.espresso = "3.2.0-alpha02"
versions.okhttp = "3.14.0"
versions.robolectric = "4.3"
versions.glide = "4.9.0"
versions.realm = "5.12.0"
versions.apache_lang = "3.9"
versions.room = "2.1.0"
versions.no_permissions = "1.1.2"
versions.convalida = "3.1.0"
versions.easy_validation = "1.0.1"
versions.fragmentation = "1.0.1"
versions.material_progress_bar = "1.6.1"
versions.fast_adapter = "4.0.1"
versions.mockk = "1.9.3"
versions.junit5_runner = "1.6.2.0"
versions.android_maven = "1.4.1"
versions.bintray = "1.7.3"
deps.versions = versions
ext.versions = versions

/**
 * Build variables.
 */
def build = [:]
build.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
build.fabric = "io.fabric.tools:gradle:$versions.fabric"
build.google_services_plugin = "com.google.gms:google-services:$versions.google_plugin"
build.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
build.realm_gradle_plugin = "io.realm:realm-gradle-plugin:$versions.realm"
build.junit5_runner = "de.mannodermaus.gradle.plugins:android-junit5:$versions.junit5_runner"
build.android_maven = "com.github.dcendents:android-maven-gradle-plugin:$versions.android_maven"
build.bintray =  "com.jfrog.bintray.gradle:gradle-bintray-plugin:$versions.bintray"
deps.build = build

/**
 * Build versions variables.
 */
def build_version = [:]
build_version.min_sdk = 21
build_version.target_sdk = 29
build_version.compile_sdk = 29
build_version.tools = "29.0.2"
deps.build_version = build_version

/**
 * Kotlin variables.
 */
def kotlin = [:]
kotlin.stdlib_jdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.stdlib_jdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.ktlint = "com.pinterest:ktlint:$versions.ktlint"
deps.kotlin = kotlin

/**
 * Android permission variables.
 */
def permissions = [:]
permissions.no = "ru.alexbykov:nopermission:$versions.no_permissions"
deps.permissions = permissions

/**
 * AndroidX variables.
 */
def androidx = [:]
androidx.core_ktx = "androidx.core:core-ktx:$versions.androidx_core"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint"
androidx.recycler_view = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
androidx.material = "com.google.android.material:material:$versions.androidx_material"
androidx.view_pager = "androidx.viewpager:viewpager:$versions.androidx_viewpager"
androidx.multidex = "androidx.multidex:multidex:$versions.androidx_multidex"
androidx.card_view = "androidx.cardview:cardview:$versions.androidx_card_view"
androidx.grid_layout = "androidx.gridlayout:gridlayout:$versions.androidx_grid_layout"
androidx.annotation = "androidx.annotation:annotation:$versions.androidx_annotation"
deps.androidx = androidx

/**
 * View variables.
 */
def view = [:]
view.circle_image_view = "de.hdodenhof:circleimageview:$versions.circle_image_view"
view.material_progress_bar = "me.zhanghai.android.materialprogressbar:library:$versions.material_progress_bar"
view.material_dialogs = "com.afollestad.material-dialogs:core:$versions.material_dialogs"
view.material_dialogs_date = "com.afollestad.material-dialogs:datetime:$versions.material_dialogs"
deps.view = view

/**
 * FastAdapter library variables.
 */
def fast_adapter = [:]
fast_adapter.core = "com.mikepenz:fastadapter:$versions.fast_adapter"
fast_adapter.diff = "com.mikepenz:fastadapter-extensions-diff:$versions.fast_adapter"
fast_adapter.scroll = "com.mikepenz:fastadapter-extensions-scroll:$versions.fast_adapter"
fast_adapter.utils = "com.mikepenz:fastadapter-extensions-utils:$versions.fast_adapter"
deps.fast_adapter = fast_adapter

/**
 * Lifecycle variables.
 */
def lifecycle = [:]
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
deps.lifecycle = lifecycle

/**
 * Dependency Injection variables.
 */
def di = [:]
di.toothpick = "com.github.stephanenicolas.toothpick:toothpick-runtime:$versions.toothpick"
di.toothpick_smoothie = "com.github.stephanenicolas.toothpick:smoothie:$versions.toothpick"
di.toothpick_compiler = "com.github.stephanenicolas.toothpick:toothpick-compiler:$versions.toothpick"
deps.di = di

/**
 * Reactivex variables.
 */
def rx = [:]
rx.java = "io.reactivex.rxjava2:rxjava:$versions.rx_java"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rx_android"
rx.java_extensions = "com.github.akarnokd:rxjava2-extensions:$versions.rx_java_extensions"
rx.realm_extensions = "com.github.vicpinm:krealmextensions:$versions.rx_realm_exitensions"
rx.room = "androidx.room:room-rxjava2:$versions.room"
rx.binding = "com.jakewharton.rxbinding3:rxbinding:$versions.rx_binding"
deps.rx = rx

/**
 * Room variables.
 */
def persistence = [:]
persistence.room = "androidx.room:room-runtime:$versions.room"
persistence.room_compiler = "androidx.room:room-compiler:$versions.room"
persistence.room_ktx = "androidx.room:room-ktx:$versions.room"
deps.persistence = persistence

/**
 * Network variables
 */
def network = [:]
network.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
network.logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
network.reactive = "com.github.pwittchen:reactivenetwork-rx2:$versions.rx_network"
network.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
network.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.network = network

/**
 * Utility variables.
 */
def utility = [:]
utility.crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
utility.joda_time = "joda-time:joda-time:$versions.joda_time"
utility.mapstruct = "org.mapstruct:mapstruct:$versions.mapstruct"
utility.mapstruct_processor = "org.mapstruct:mapstruct-processor:$versions.mapstruct"
utility.glide = "com.github.bumptech.glide:glide:$versions.glide"
utility.glide_compiler = "com.github.bumptech.glide:compiler:$versions.glide"
utility.apache_lang = "org.apache.commons:commons-lang3:$versions.apache_lang"
utility.convalida_ktx = "io.github.wellingtoncosta:convalida-ktx:$versions.convalida"
utility.easy_validation = "com.wajahatkarim3.easyvalidation:easyvalidation-core$versions.easy_validation"
utility.fragmentation = "me.yokeyword:fragmentationx:$versions.fragmentation"
deps.utility = utility

/**
 * Test variables.
 */
def test = [:]
test.junit_api = "org.junit.jupiter:junit-jupiter-api:$versions.junit"
test.junit_params = "org.junit.jupiter:junit-jupiter-params:$versions.junit"
test.junit_engine = "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
test.mockito = "org.mockito:mockito-core:$versions.mockito"
test.mockito_ktx = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_ktx"
test.toothpick = "com.github.stephanenicolas.toothpick:toothpick-testing:$versions.toothpick_testing"
test.matchers_ktx = "com.github.stephanenicolas.toothpick:toothpick-testing:$versions.toothpick_testing"
test.androidx_core = "androidx.test:core:$versions.androidx_test_core"
test.dexmaker_mockito = "com.google.dexmaker:dexmaker-mockito:$versions.dexmaker_mockito"
test.androidx_runner = "androidx.test:runner:$versions.androidx_runner"
test.androidx_rules = "androidx.test:rules:$versions.androidx_runner"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso"
test.espresso_intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
test.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
test.robolectric = "org.robolectric:robolectric:$versions.robolectric"
test.mockk = "io.mockk:mockk:$versions.mockk"
deps.test = test

/**
 * Apply the commonly used repositories into the handler.
 * @param repositories handler
 * @return
 */
static def applyRepositories(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://maven.fabric.io/public" }
    handler.maven { url "https://jitpack.io" }
}

// Export applyRepositories method.
ext.applyRepositories = this.&applyRepositories